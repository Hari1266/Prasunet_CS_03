import re

def check_password_strength(password):
    # Initialize strength variables
    length = len(password)
    has_upper = re.search(r'[A-Z]', password)
    has_lower = re.search(r'[a-z]', password)
    has_digit = re.search(r'[0-9]', password)
    has_special = re.search(r'[\W]', password)
    
    # Initialize strength score
    strength_score = 0
    
    # Evaluate the password
    if length >= 8:
        strength_score += 1
    if has_upper:
        strength_score += 1
    if has_lower:
        strength_score += 1
    if has_digit:
        strength_score += 1
    if has_special:
        strength_score += 1
    
    # Provide feedback based on strength score
    if strength_score == 5:
        strength = 'Very Strong'
    elif strength_score == 4:
        strength = 'Strong'
    elif strength_score == 3:
        strength = 'Moderate'
    elif strength_score == 2:
        strength = 'Weak'
    else:
        strength = 'Very Weak'
    
    return strength, {
        'length': length >= 8,
        'uppercase': bool(has_upper),
        'lowercase': bool(has_lower),
        'digit': bool(has_digit),
        'special': bool(has_special)
    }

def get_feedback(strength_details):
    feedback = []
    
    if not strength_details['length']:
        feedback.append("Password should be at least 8 characters long.")
    if not strength_details['uppercase']:
        feedback.append("Password should include at least one uppercase letter.")
    if not strength_details['lowercase']:
        feedback.append("Password should include at least one lowercase letter.")
    if not strength_details['digit']:
        feedback.append("Password should include at least one digit.")
    if not strength_details['special']:
        feedback.append("Password should include at least one special character.")
    
    return feedback

# Example usage
password = input("Enter a password to check its strength: ")
strength, details = check_password_strength(password)
feedback = get_feedback(details)

print(f"Password Strength: {strength}")
for item in feedback:
    print(f"- {item}")
